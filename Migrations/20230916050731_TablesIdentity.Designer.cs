// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Productos.Models;

#nullable disable

namespace Proyec1.Migrations
{
    [DbContext(typeof(ConexionBD))]
    [Migration("20230916050731_TablesIdentity")]
    partial class TablesIdentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("RoleId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Productos.Models.ClienteInv", b =>
                {
                    b.Property<int>("idcliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idcliente");

                    b.Property<string>("Correo")
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.Property<string>("imgcliente")
                        .HasColumnType("longtext");

                    b.HasKey("idcliente");

                    b.ToTable("ClienteInv");
                });

            modelBuilder.Entity("Productos.Models.ModeloProductos", b =>
                {
                    b.Property<int>("idproducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Idproducto");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("imgprincipal")
                        .HasColumnType("longtext");

                    b.HasKey("idproducto");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("Productos.Models.PedidoInv", b =>
                {
                    b.Property<int>("idpedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idpedido");

                    b.Property<int>("ClienteInvidcliente")
                        .HasColumnType("int")
                        .HasColumnName("ClienteInvidcliente");

                    b.Property<string>("Direccion_Entrega")
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Monto")
                        .HasColumnType("longtext");

                    b.Property<string>("imgpedido")
                        .HasColumnType("longtext");

                    b.HasKey("idpedido");

                    b.HasIndex("ClienteInvidcliente");

                    b.ToTable("PedidoInv");
                });

            modelBuilder.Entity("Productos.Models.Prodcts", b =>
                {
                    b.Property<int>("idproducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Idproducto");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("descripcion")
                        .HasColumnType("longtext");

                    b.HasKey("idproducto");

                    b.ToTable("Prodcts");
                });

            modelBuilder.Entity("Productos.Models.ProductosInventario", b =>
                {
                    b.Property<int>("idproducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Idproducto");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("SuminisInventarioidproveedor")
                        .HasColumnType("int")
                        .HasColumnName("SuminisInventarioidproveedor");

                    b.Property<string>("descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("imgprincipal")
                        .HasColumnType("longtext");

                    b.HasKey("idproducto");

                    b.HasIndex("SuminisInventarioidproveedor");

                    b.ToTable("ProductosInventario");
                });

            modelBuilder.Entity("Productos.Models.Proveedores", b =>
                {
                    b.Property<int>("Idcompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Idcompra");

                    b.Property<int>("CantCompra")
                        .HasColumnType("int");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreProducto")
                        .HasColumnType("longtext");

                    b.Property<string>("PaisProveedor")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("TipoProducto")
                        .HasColumnType("longtext");

                    b.Property<int>("idproveedor")
                        .HasColumnType("int");

                    b.Property<string>("imgprincipal")
                        .HasColumnType("longtext");

                    b.HasKey("Idcompra");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("Productos.Models.Resenias", b =>
                {
                    b.Property<int>("idresena")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idresena");

                    b.Property<string>("Comentario")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ProductosInventarioidproducto")
                        .HasColumnType("int");

                    b.Property<string>("Usuario")
                        .HasColumnType("longtext");

                    b.HasKey("idresena");

                    b.HasIndex("ProductosInventarioidproducto");

                    b.ToTable("Resenias");
                });

            modelBuilder.Entity("Productos.Models.Stock", b =>
                {
                    b.Property<int>("idproducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Idproducto");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<int?>("NumBodega")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("TipoProducto")
                        .HasColumnType("longtext");

                    b.Property<string>("imgprincipal")
                        .HasColumnType("longtext");

                    b.HasKey("idproducto");

                    b.ToTable("Stokc");
                });

            modelBuilder.Entity("Productos.Models.SuminisInventario", b =>
                {
                    b.Property<int>("idproveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idproveedor");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("PaisProveedor")
                        .HasColumnType("longtext");

                    b.Property<string>("descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("imgproveedor")
                        .HasColumnType("longtext");

                    b.HasKey("idproveedor");

                    b.ToTable("SuminisInventario");
                });

            modelBuilder.Entity("Productos.Models.VentasProductos", b =>
                {
                    b.Property<int>("Idventa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Idventa");

                    b.Property<int>("CantidadVenta")
                        .HasColumnType("int");

                    b.Property<string>("CedulaCliente")
                        .HasColumnType("longtext");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreCliente")
                        .HasColumnType("longtext");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("idproducto")
                        .HasColumnType("int");

                    b.Property<string>("imgprincipal")
                        .HasColumnType("longtext");

                    b.HasKey("Idventa");

                    b.ToTable("VentasProductos");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Productos.Models.PedidoInv", b =>
                {
                    b.HasOne("Productos.Models.ClienteInv", "ClienteInv")
                        .WithMany("PedidoInv")
                        .HasForeignKey("ClienteInvidcliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClienteInv");
                });

            modelBuilder.Entity("Productos.Models.ProductosInventario", b =>
                {
                    b.HasOne("Productos.Models.SuminisInventario", "SuminisInventario")
                        .WithMany("ProductosInventario")
                        .HasForeignKey("SuminisInventarioidproveedor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SuminisInventario");
                });

            modelBuilder.Entity("Productos.Models.Resenias", b =>
                {
                    b.HasOne("Productos.Models.ProductosInventario", "ProductosInventario")
                        .WithMany("Resenias")
                        .HasForeignKey("ProductosInventarioidproducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductosInventario");
                });

            modelBuilder.Entity("Productos.Models.ClienteInv", b =>
                {
                    b.Navigation("PedidoInv");
                });

            modelBuilder.Entity("Productos.Models.ProductosInventario", b =>
                {
                    b.Navigation("Resenias");
                });

            modelBuilder.Entity("Productos.Models.SuminisInventario", b =>
                {
                    b.Navigation("ProductosInventario");
                });
#pragma warning restore 612, 618
        }
    }
}
